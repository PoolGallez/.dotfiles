" The Arch Linux global vimrc - setting only a few sane defaults
"
" DO NOT EDIT THIS FILE. IT'S OVERWRITTEN UPON UPGRADES.
"
" Use /etc/vimrc for system-wide and $HOME/.vimrc for personal configuration
" (for details see ':help initialization').
"
" Use :help '<option>' to see the documentation for the given option.

" Use Vim defaults instead of 100% vi compatibility
" Avoid side-effects when nocompatible has already been set.
if &compatible
  set nocompatible
endif

set backspace=indent,eol,start
set ruler
set suffixes+=.aux,.bbl,.blg,.brf,.cb,.dvi,.idx,.ilg,.ind,.inx,.jpg,.log,.out,.png,.toc
set suffixes-=.h
set suffixes-=.obj

" Move temporary files to a secure location to protect against CVE-2017-1000382
if exists('$XDG_CACHE_HOME')
  let &g:directory=$XDG_CACHE_HOME
else
  let &g:directory=$HOME . '/.cache'
endif
let &g:undodir=&g:directory . '/vim/undo//'
let &g:backupdir=&g:directory . '/vim/backup//'
let &g:directory.='/vim/swap//'
" Create directories if they doesn't exist
if ! isdirectory(expand(&g:directory))
  silent! call mkdir(expand(&g:directory), 'p', 0700)
endif
if ! isdirectory(expand(&g:backupdir))
  silent! call mkdir(expand(&g:backupdir), 'p', 0700)
endif
if ! isdirectory(expand(&g:undodir))
  silent! call mkdir(expand(&g:undodir), 'p', 0700)
endif

" Make shift-insert work like in Xterm
if has('gui_running')
  map <S-Insert> <MiddleMouse>
  map! <S-Insert> <MiddleMouse>
endif

"
" Personal settings for nvim 
"

" Line numbers are both absolute and relative line numbers to easily move
" within the code
set number
set relativenumber

" Indentation automatic and based on the type of the file
set autoindent
filetype indent on 

" Highlight the terms you are searching non case sensitive
set hlsearch
set incsearch
set smartcase
set showmatch

syntax enable
set title
set foldmethod=indent
set foldnestmax=3
set nofoldenable

set cursorline
set cursorcolumn
set showmode
" Enable feature similar to bash completion
set wildmenu
set wildmode=list:longest
set wildignore=*.docx,*.jpg,*.png,*.gif,*.pdf,*.pyc,*.exe,*.flv,*.img,*.xlsx


" PLUGINS ---------------------------------------------------------------- {{{

" Plugin code goes here.

call plug#begin(stdpath('config') . '/plugged')

" Initialize plugin system

" Fugitive: Vim integration with git 
Plug 'tpope/vim-fugitive'

" NERDTree: Simple root-based file explorer for vim 
Plug 'scrooloose/nerdtree'

" Vim-Airline: Show in a pleasent way the status of vim mode 
Plug 'vim-airline/vim-airline'

" Syntastic: Syntax checking for vim 
Plug 'scrooloose/syntastic'

" MultipleCursors: True Sublime multiple cursors in vim  
Plug 'terryma/vim-multiple-cursors'

" Youcompleteme: Code-completion engine for vim
Plug 'valloric/youcompleteme'

" IndentGuides: Show indention guides
Plug 'nathanaelkane/vim-indent-guides'

" NordicVim: Nordic theme for vim 
Plug 'arcticicestudio/nord-vim'

" Vimtex: Support for writing down latex documents directly in vim
Plug 'lervag/vimtex'
    let g:tex_flavor='latex'
    let g:vimtex_view_method='zathura' " This is the pdf viewer
    let g:vimtex_quickfix_mode=0

" TexConceal: Directly writes the equation in the tex file
Plug 'KeitaNakamura/tex-conceal.vim'
    set conceallevel=1
    let g:tex_conceal='abdmg'
    hi Conceal ctermbg=none

call plug#end()


" }}}

" Colorscheme setting 
colorscheme nord

Plug 'lervag/vimtex'
let g:tex_flavor='latex'
let g:vimtex_view_method='zathura'
let g:vimtex_quickfix_mode=0
set conceallevel=1
let g:tex_conceal='abdmg'
" MAPPINGS --------------------------------------------------------------- {{{

" Mappings code goes here.

" }}}


" VIMSCRIPT -------------------------------------------------------------- {{{

" This will enable code folding.
" Use the marker method of folding.
augroup filetype_vim
    autocmd!
    autocmd FileType vim setlocal foldmethod=marker
augroup END

" More Vimscripts code goes here.

" }}}


" STATUS LINE ------------------------------------------------------------ {{{

" Status bar code goes here.

" }}}
